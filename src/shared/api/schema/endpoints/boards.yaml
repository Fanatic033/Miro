schemas:
  Board:
    type: object
    required:
      - id
      - name
      - createdAt
      - updatedAt
      - lastOpened
      - isFavorite
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      lastOpened:
        type: string
        format: date-time
      isFavorite:
        type: boolean

  RenamedBoard:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  UpdateBoardFavorite:
    type: object
    required:
      - isFavorite
    properties:
      isFavorite:
        type: boolean
  BoardList:
    type: object
    required:
      - list
      - total
      - totalPages
    properties:
      list:
        type: array
        items:
          $ref: '#/schemas/Board'
      total:
        type: integer
      totalPages:
        type: integer

getAllBoards:
  summary: Get all boards for current user
  security:
    - bearerAuth: [ ]
  parameters:
    - name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
    - name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 10
    - name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - createdAt
          - updatedAt
          - lastOpened
          - name
    - name: isFavorite
      in: query
      required: false
      schema:
        type: boolean
    - name: search
      in: query
      required: false
      schema:
        type: string
  responses:
    '200':
      description: List of boards
      content:
        application/json:
          schema:
            $ref: '#/schemas/BoardList'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'


getBoardById:
  summary: Get board by ID
  parameters:
    - name: boardId
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      description: Board found
      content:
        application/json:
          schema:
            $ref: '#/schemas/Board'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'




createBoard:
  summary: Create a new board
  security:
    - bearerAuth: [ ]
  responses:
    '201':
      description: Board created successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/Board'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'

renameBoard:
  summary: Rename a  board
  security:
    - bearerAuth: [ ]
  parameters:
    - name: boardId
      in: path
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/RenamedBoard'
  responses:
    '201':
      description: Board created successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/Board'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'


updateBoardFavorite:
  summary: update a  board favorite
  security:
    - bearerAuth: [ ]
  parameters:
    - name: boardId
      in: path
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/UpdateBoardFavorite'
  responses:
    '201':
      description: Board created successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/Board'
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'


deleteBoard:
  summary: Delete a board
  security:
    - bearerAuth: [ ]
  parameters:
    - name: boardId
      in: path
      required: true
      schema:
        type: string
  responses:
    '204':
      description: Board deleted successfully
    '401':
      $ref: '../shared/responses.yaml#/UnauthorizedError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'
